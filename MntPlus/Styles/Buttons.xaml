<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:MntPlus.WPF">
        <!-- ButtonNameConverter as a local resource -->
        
    <!-- Hoverless button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- System Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Margin" Value="10" />

    </Style>

    <!-- Start: VerticalMenuStyle2 -->
    <Style x:Key="MenuRadioButtonStyle2" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton" CornerRadius="8"   Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition Width="*"/>

                            </Grid.ColumnDefinitions>

                            <!-- Selected  -->
                            <Border x:Name="btnSelected"   Grid.ColumnSpan="2"  CornerRadius="4" Width="230" HorizontalAlignment="Right"/>

                           
                            <!-- Icon -->
                            <Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Height="24" Width="24" Stretch="Uniform" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0"/>

                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="12 0 0 0">
                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                           Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FontSize="{TemplateBinding FontSize}"  Margin="0 0 5 0"/>
                                <!-- expand Icon -->
                                <Path  Visibility="Collapsed" x:Name="expandIcon" Data="{DynamicResource expand}" Height="11" Width="11" 
                                       Stretch="Uniform" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10 0 2 0">

                                </Path>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Name" Value="rdPayment">
                            <Setter TargetName="expandIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource SecundaryTextColor}"/>
                            <!-- Optional 
                      <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                      <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#ffffff"/>
                            <Setter TargetName="expandIcon" Property="Fill" Value="#ffffff"/>

                            <Setter TargetName="menuButton" Property="Background" Value="#6239EB"/>
                            <Setter TargetName="menuButton" Property="CornerRadius" Value="8 8 0 0"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="#ffffff"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: VerticalMenuStyle -->
    
    <!-- Start: SubVerticalMenuStyle -->
    <Style x:Key="SubVerticalMenuStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition Width="*"/>

                            </Grid.ColumnDefinitions>

                            <!-- Selected  -->
                            <Border x:Name="btnSelected" Grid.ColumnSpan="2"  CornerRadius="4" Width="215" HorizontalAlignment="Right"/>

                            <!-- Indicator -->
                            <Rectangle Name="Indicator" HorizontalAlignment="Left" Width="4" Height="40" VerticalAlignment="Center" RadiusX="2" RadiusY="2"/>

                            <!-- Icon -->
                            <Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Height="24" Width="24" Stretch="Uniform" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0"/>

                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="12 0 0 0">
                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                           Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FontSize="{TemplateBinding FontSize}"  Margin="0 0 5 0"/>
                                <!-- expand Icon -->
                                <Path  Visibility="Collapsed" x:Name="expandIcon" Data="{DynamicResource expand}" Height="11" Width="11" Stretch="Uniform" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10 0 2 0">

                                </Path>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Name" Value="rdPayment">
                            <Setter TargetName="expandIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource SecundaryTextColor}"/>
                            <!-- Optional 
                      <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                      <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource TertiaryTextColor}"/>
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="Indicator" Property="Height" Value="20"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource TertiaryTextColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: VerticalMenuStyle -->
    <!-- Start: Button | Minimize | Maximize | Close -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}"
                           Fill="{DynamicResource PrimaryTextColor}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626"/>
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource TertiaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button | Minimize | Maximize | Close -->

    <!-- Start: ToggleButtonStyle -->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />

        <Setter Property="Background" Value="{DynamicResource SecundaryWhiteColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryWhiteColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                             Background="{TemplateBinding Background}"
                             CornerRadius="7"
                             Height="14"
                             Width="35"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center">
                            <!-- Optional -->
                            <!--<Border.Effect>
                             <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                         </Border.Effect>-->
                        </Border>
                        <Ellipse x:Name="Ellipse"
                                  Height="20"
                                  Width="20"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"
                                  Fill="{DynamicResource TertiaryWhiteColor}"
                                  Stroke="{TemplateBinding BorderBrush}"
                                  StrokeThickness="3">
                            <!-- Optional -->
                            <!--<Ellipse.Effect>
                             <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                         </Ellipse.Effect>-->
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- EventTrigger Checked -->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                     Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                     To="#C2D1FC" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                         Storyboard.TargetProperty="Margin"
                                                         To="15 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- EventTrigger UnChecked -->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                     Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                     To="#CECECE" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                         Storyboard.TargetProperty="Margin"
                                                         To="0 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse"
                                 Property="Fill"
                                 Value="{DynamicResource SecundaryBlueColor}"/>
                            <Setter TargetName="Ellipse"
                                Property="Stroke"
                                Value="{DynamicResource PrimaryTextColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: ToggleButtonStyle -->

    <!-- Start: VerticalMenuStyle -->
    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/> 
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton" CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition Width="*"/>

                            </Grid.ColumnDefinitions>

                            <!-- Selected  -->
                            <Border x:Name="btnSelected" Grid.ColumnSpan="2"  CornerRadius="4" Width="215" HorizontalAlignment="Right"/>

                            <!-- Indicator -->
                            <Rectangle Name="Indicator" HorizontalAlignment="Left" Width="4" Height="40" VerticalAlignment="Center" RadiusX="2" RadiusY="2"/>

                            <!-- Icon -->
                            <Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Height="24" Width="24" Stretch="Uniform" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0"/>

                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="12 0 0 0">
                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                              Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                             FontWeight="{TemplateBinding FontWeight}"
                                             FontSize="{TemplateBinding FontSize}"  Margin="0 0 5 0"/>
                                <!-- expand Icon -->
                                <Path  Visibility="Collapsed" x:Name="expandIcon" Data="{DynamicResource expand}" Height="11" Width="11" Stretch="Uniform" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10 0 2 0">
                                   
                                </Path>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Name" Value="rdPayment">
                            <Setter TargetName="expandIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource SecundaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource SecundaryTextColor}"/>
                            <!-- Optional 
                         <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                         <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#ffffff"/>

                            <Setter TargetName="menuButton" Property="Background" Value="#6239EB"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="#ffffff"/>
                           
                        </Trigger>
                      
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style> 
    <!-- End: VerticalMenuStyle -->

    <!-- Start: Menu Icon -->
    <Style x:Key="MenuIconStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Viewbox Height="20" Width="20" Margin="0 6 0 0" Stretch="UniformToFill">
                            <Canvas Height="512" Width="512">
                                <Path x:Name="ico" Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource PrimaryTextColor}" Margin="0 0 0 0"/>
                                <Path x:Name="ico1" Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource PrimaryTextColor}" Margin="0 20 0 0"/>
                                <Path x:Name="ico2" Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource PrimaryTextColor}" Margin="0 40 0 0"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
                            <Setter Property="Fill" TargetName="ico" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Fill" TargetName="ico1" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Fill" TargetName="ico2" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Menu Icon -->
    
    <!-- Start: Prime button -->
    <Style x:Key="PrimeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Foreground" Value="#F8F8F8"/>
        <Setter Property="FontFamily" Value="{DynamicResource ClarityCity-Regular}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Height" Value="33"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>

                        <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Color="Gray" Opacity="0.5"/>
                            </Border.Effect>
                        </Border>

                        <Grid>
                                <!-- Drop shadow -->

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>

                                </Grid.ColumnDefinitions>

                                <!-- Icon -->
                                <Path  x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Height="11" Width="11" Stretch="Uniform" Fill="#F8F8F8" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="15 0 5 0"/>

                                <!-- Text -->
                                <TextBlock  Grid.Column="1" x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                       Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      FontSize="{TemplateBinding FontSize}"  Margin="0"/>

                            </Grid>
                            <!--<Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.5"/>
                            </Border.Effect>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#0063F7" Duration="0:0:0.6" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#004FC4" Duration="0:0:0.6" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            --><!--<Setter Property="Background" TargetName="border" Value="{DynamicResource SecundaryBlueColor}"/>--><!--
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TertiaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Prime button -->
    <Style x:Key="PrimeButton2" TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{DynamicResource TertiaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBlueColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ClarityCity-Regular}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Height" Value="33"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>

                        <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Color="Gray" Opacity="0.5"/>
                            </Border.Effect>
                        </Border>

                        <Grid>
                            <!-- Drop shadow -->

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>

                            </Grid.ColumnDefinitions>

                            <!-- Icon -->
                            <Path  x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                                   Height="16" Width="16" Stretch="Uniform" Fill="{TemplateBinding Foreground}" 
                                   VerticalAlignment="Center" HorizontalAlignment="Left" Margin="18 0 5 0"/>

                           
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5 0 0 0">
                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                              Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                             FontWeight="{TemplateBinding FontWeight}"
                                             FontSize="{TemplateBinding FontSize}"  Margin="0 0 5 0"/>
                                <!-- expand Icon -->
                                <Path  Visibility="Collapsed" x:Name="expandIcon" Data="{DynamicResource expand}" Height="11" Width="11" 
                                       Stretch="Uniform" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center"
                                       HorizontalAlignment="Right" Margin="5 0 5 0">

                                </Path>
                            </StackPanel>
                        </Grid>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Name" Value="BulkBtn">
                            <Setter TargetName="expandIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Name" Value="uploadBtn">
                            <Setter TargetName="expandIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource LineColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource LineColor2}"/>
                        </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

    <!-- Start: VerticalPopupButtonMenuStyle -->
    <Style x:Key="PopupButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TertiaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBlueColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ClarityCity-Regular}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Height" Value="33"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                           
                              <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                           Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FontSize="{TemplateBinding FontSize}"  Margin="10 0 5 0"/>
                                
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource LineColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource LineColor2}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: VerticalMenuStyle -->

    <Style x:Key="IconPathButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"
                           BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           Background="{TemplateBinding Background}" 
                           SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                         
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource LineColor2}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Name" Value="ImgBtn"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Start: MenuListButtonStyle -->
    <Style x:Key="MenuListButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="20 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton" CornerRadius="4" Padding="{TemplateBinding Padding}"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>

                            </Grid.ColumnDefinitions>


                           
                            <!-- Icon -->
                            <Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Height="16" Width="16" Stretch="Uniform" Fill="{DynamicResource PrimaryTextColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0"/>

                                <!-- Text -->
                            
                            <TextBlock x:Name="txtName" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                           Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FontSize="{TemplateBinding FontSize}"  Margin="4 0 5 0"/>
                              
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="menuButton" Property="Background" Value="{DynamicResource LineColor}"/>

                            <!-- Optional 
                      <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                      <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
                            <Setter TargetName="menuButton" Property="Background" Value="{DynamicResource LineColor}"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: VerticalMenuStyle -->
    
    
    <Style x:Key="TextButton" TargetType="{x:Type Button}"> 
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="5"
                           BorderBrush="{TemplateBinding BorderBrush}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           Background="{TemplateBinding Background}" 
                           SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimeIconButton" TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{DynamicResource TertiaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBlueColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ClarityCity-Regular}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>

                        <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Color="Gray" Opacity="0.5"/>
                            </Border.Effect>
                        </Border>

                        <Grid>
                           

                            <!-- Icon -->
                            <Path  x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                                   Height="12" Width="12" Stretch="Uniform" Fill="{TemplateBinding Foreground}" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4"/>


                           
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                       
                       
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"  Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="border" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CPrimeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Foreground" Value="#F8F8F8"/>
        <Setter Property="FontFamily" Value="{DynamicResource ClarityCity-Regular}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Height" Value="33"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>

                        <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Color="Gray" Opacity="0.5"/>
                            </Border.Effect>
                        </Border>

                        <Grid>
                           
                            <!-- Text -->
                            <TextBlock   x:Name="txtName" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                   Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                  FontWeight="{TemplateBinding FontWeight}"
                                  FontSize="{TemplateBinding FontSize}"  Margin="0"/>

                        </Grid>
                        <!--<Border.Effect>
                            <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.5"/>
                        </Border.Effect>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#0063F7" Duration="0:0:0.6" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#004FC4" Duration="0:0:0.6" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                        -->
                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource SecundaryBlueColor}"/>-->
                        <!--
                        <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBlueColor}"/>

                    </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TertiaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="CPrime2" TargetType="{x:Type Button}" BasedOn="{StaticResource CPrimeButton}">
        <Setter Property="Background" Value="{DynamicResource TertiaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBlueColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ClarityCity-Regular}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Height" Value="33"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>

                        <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Color="Gray" Opacity="0.5"/>
                            </Border.Effect>
                        </Border>

                        <Grid>

                            <!-- Text -->
                            <TextBlock   x:Name="txtName" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                         Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontSize="{TemplateBinding FontSize}"  Margin="0"/>

                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
    
                        <Setter Property="Background" TargetName="border" Value="{DynamicResource SecundaryBlueColor}"/>
                        
    
</Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>