// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace MntPlus.WPF.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Entities.Assignee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Assignees");
                });

            modelBuilder.Entity("Entities.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("EquipmentId");

                    b.Property<Guid?>("EquipmentAssignedToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EquipmentClassId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EquipmentCommissionDate")
                        .HasColumnType("TEXT");

                    b.Property<double?>("EquipmentCost")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("EquipmentDepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentDescription")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("EquipmentImage")
                        .HasColumnType("BLOB");

                    b.Property<string>("EquipmentMake")
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentModel")
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentNameImage")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EquipmentOrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EquipmentParent")
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentSerialNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentSite")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EquipmentStatusId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EquipmentTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentAssignedToId");

                    b.HasIndex("EquipmentClassId");

                    b.HasIndex("EquipmentDepartmentId");

                    b.HasIndex("EquipmentOrganizationId");

                    b.HasIndex("EquipmentStatusId");

                    b.HasIndex("EquipmentTypeId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("Entities.EquipmentClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EquipmentClasses");
                });

            modelBuilder.Entity("Entities.EquipmentDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EquipmentDepartments");
                });

            modelBuilder.Entity("Entities.EquipmentStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentStatusName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EquipmentStatuses");
                });

            modelBuilder.Entity("Entities.EquipmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentTypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("Entities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Entities.Equipment", b =>
                {
                    b.HasOne("Entities.Assignee", "EquipmentAssignedTo")
                        .WithMany()
                        .HasForeignKey("EquipmentAssignedToId");

                    b.HasOne("Entities.EquipmentClass", "EquipmentClass")
                        .WithMany()
                        .HasForeignKey("EquipmentClassId");

                    b.HasOne("Entities.EquipmentDepartment", "EquipmentDepartment")
                        .WithMany()
                        .HasForeignKey("EquipmentDepartmentId");

                    b.HasOne("Entities.Organization", "EquipmentOrganization")
                        .WithMany()
                        .HasForeignKey("EquipmentOrganizationId");

                    b.HasOne("Entities.EquipmentStatus", "EquipmentStatus")
                        .WithMany()
                        .HasForeignKey("EquipmentStatusId");

                    b.HasOne("Entities.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeId");

                    b.Navigation("EquipmentAssignedTo");

                    b.Navigation("EquipmentClass");

                    b.Navigation("EquipmentDepartment");

                    b.Navigation("EquipmentOrganization");

                    b.Navigation("EquipmentStatus");

                    b.Navigation("EquipmentType");
                });
#pragma warning restore 612, 618
        }
    }
}
