<Window x:Class="MntPlus.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MntPlus.WPF"
        mc:Ignorable="d" Activated="AppWindow_Activated" Deactivated="AppWindow_Deactivated"
        WindowStartupLocation="CenterScreen" WindowState="Maximized" AllowsTransparency="True"
        WindowStyle="None" Background="Transparent" x:Name="AppWindow"
        Title="MainWindow" Height="600" Width="1100" MinWidth="1100" MinHeight="600">
    <Window.Resources>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <!-- Outer border with the dropshadow margin -->
                        <Border Margin="{Binding OuterMarginSizeThickness, FallbackValue=10}">
                            <!-- Main window outline -->
                            <Grid>

                                <!-- Opacity mask for corners on grid -->
                                <Border x:Name="Container"
                           Background="{DynamicResource TertiaryBackgroundColor}"
                           CornerRadius="{Binding WindowCornerRadius, FallbackValue=10}" />
                                <!-- Window border and dropshadown -->
                                <Border CornerRadius="{Binding WindowCornerRadius, FallbackValue=10}"
                      Background="{DynamicResource PrimaryBackgroundColor}">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0" Opacity="0.6" />
                                    </Border.Effect>
                                </Border>
                                <!-- The main window content -->
                                <Grid>

                                    <!-- Corner clipping -->
                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=Container}" />
                                    </Grid.OpacityMask>
                                    <Grid.RowDefinitions>

                                        <!-- Title Bar -->
                                        <RowDefinition Height="{Binding TitleHeightGridLength, FallbackValue=42}" />

                                        <!-- Window Content -->
                                        <RowDefinition Height="*" />

                                    </Grid.RowDefinitions>

                                    <!-- Title Bar -->
                                    <Grid Grid.Column="0" Panel.ZIndex="1">

                                        <Grid.ColumnDefinitions>
                                            <!-- Icon -->
                                            <ColumnDefinition Width="Auto" />
                                            <!-- Title -->
                                            <ColumnDefinition Width="*" />
                                            <!-- Windows Button -->
                                            <ColumnDefinition Width="Auto" />

                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="3" BorderThickness="0 0 0 1" CornerRadius="10 10 0 0 " BorderBrush="{DynamicResource LineColor}" Background="{DynamicResource TertiaryBackgroundColor}" />
                                        <!-- Icon -->
                                        <Button Style="{StaticResource SystemIconButton}" Command="{Binding MenuCommand}">
                                            <Image Source="Styles/Icons/maintenance.png" />
                                        </Button>
                                        <!-- Title -->
                                        <Viewbox Height="16" Grid.Column="0" Grid.ColumnSpan="3" Margin="5">
                                            <StackPanel>
                                                <TextBlock  FontSize="12" Margin="0,0,0,-5">
<Run Text="M" Foreground="{StaticResource SecundaryOrangeColor}" /><Run Text="N" Foreground="{StaticResource PrimaryBlueColor}" /><Run Text="T" Foreground="{StaticResource PrimaryGreenColor}" /><Run Text="+"  Foreground="{StaticResource SecundaryRedColor}" />
                                                </TextBlock>
                                            </StackPanel>
                                        </Viewbox>
                                        <!-- Window Buttons -->
                                        <StackPanel  Grid.Column="2"  Orientation="Horizontal" >
                                            <Border  CornerRadius="18" Width="110" Height="35" Background="{DynamicResource TertiaryBackgroundColor}" HorizontalAlignment="Right" Margin="0 0 35 0">
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <Path Data="{DynamicResource sun}" Height="16" Width="16" Stretch="UniformToFill" Fill="{DynamicResource PrimaryYellowColor}" VerticalAlignment="Center"/>
                                                    <ToggleButton x:Name="Themes" Cursor="Hand"
                                                           IsChecked="False" 
                                                                  Command="{Binding ToggleThemeCommand}"
                                                                  CommandParameter="{Binding ElementName=Themes, Path=IsChecked}"
             
                                                           Click="Themes_Click"
                                                           HorizontalAlignment="Right"
                                                           Style="{DynamicResource ToggleButtonStyle}"
                                                           Margin="10 0 10 0"/>
                                                    <Path Data="{DynamicResource moon}" Height="16" Width="16" Stretch="Fill" Fill="{DynamicResource PrimaryWhiteColor}" VerticalAlignment="Center"/>
                                                </StackPanel>
                                                <!--<Border.BitmapEffect>
                                                                 <DropShadowBitmapEffect
                                                                                 ShadowDepth="1"
                                                                                 Direction="0"
                                                                                 Color="#5B8DEF"
                                                                                 Softness="0.8"/>
                                                             </Border.BitmapEffect>-->
                                            </Border>

                                            <Button  Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource minimize}" Command="{Binding MinimizeCommand}"/>

                                            <Button  Margin="5 0"  Command="{Binding MaximizeCommand}">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonsStyle}">
                                                        <Setter Property="Content" Value="{DynamicResource maximize}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=AppWindow, Path=WindowState}" Value="Maximized">
                                                                <Setter Property="Content" Value="{DynamicResource restore}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button Margin="5 0" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Command="{Binding CloseCommand}" Tag="IsCloseButton"/>

                                        </StackPanel>
                                    </Grid>
                                    <!-- Page Content -->
                                    <Border Grid.Row="1" Padding="{Binding InnerContentPadding}" ClipToBounds="True">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome
            ResizeBorderThickness="{Binding ResizeBorderThickness}"
            CaptionHeight="{Binding TitleHeight}"
            CornerRadius="0"
            GlassFrameThickness="0" 
        />
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <!-- Dimmed overlay -->
        <Border Grid.ColumnSpan="2"
                 Panel.ZIndex="10"
                 Opacity="0.3">

            <Border Background="{StaticResource PrimaryBlackColor}"
              local:AnimateFadeInProperty.Value="{Binding DimmableOverlayVisible}"/>

        </Border>
        <local:SideMenu local:AnimateSlideInFromLeftProperty.Value="{Binding ApplicationViewModel.SideMenuVisible, 
                        Source={x:Static local:ViewModelLocator.Instance}}"/>
        <local:PageHost Grid.Column="1" 
                 CurrentPage="{Binding ApplicationViewModel.CurrentPage,
           Source={x:Static local:ViewModelLocator.Instance}}"
           CurrentPageViewModel="{Binding ApplicationViewModel.CurrentPageViewModel,
           Source={x:Static local:ViewModelLocator.Instance}}"     />
    </Grid>
</Window>
