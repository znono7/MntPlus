<Window x:Class="MntPlus.WPF.InitialEquipmentWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MntPlus.WPF"
        mc:Ignorable="d" ShowInTaskbar="False" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Background="Transparent"
        Title="InitialEquipmentWindow" Height="400" Width="1000" Loaded="Window_Loaded" x:Name="Wind">
    <Window.Resources>
        <local:ValidationErrorsConverter x:Key="ValidationErrorsConverter"/>

        <Style TargetType="{x:Type local:InitialEquipmentWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <!-- Outer border with the dropshadow margin -->
                        <Border Margin="10">
                            <!-- Main window outline -->
                            <Grid>

                                <!-- Opacity mask for corners on grid -->
                                <Border x:Name="Container"
                                       Background="{DynamicResource PrimaryBackgroundColor}"
                                       CornerRadius="10" />
                                <!-- Window border and dropshadown -->
                                <Border CornerRadius="10"
                                        Background="{DynamicResource PrimaryBackgroundColor}">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="1" Opacity="0.6" />
                                    </Border.Effect>
                                </Border>
                                <!-- The main window content -->
                                <Grid>


                                    <Grid.RowDefinitions>

                                        <!-- Title Bar -->
                                        <RowDefinition Height="60" />

                                        <!-- Window Content -->
                                        <RowDefinition Height="*" />

                                    </Grid.RowDefinitions>

                                    <!-- Title Bar -->
                                    <Grid Grid.Column="0" Panel.ZIndex="1" VerticalAlignment="Bottom"  >

                                        <Grid.ColumnDefinitions>
                                            <!-- Icon -->
                                            <ColumnDefinition Width="Auto" />
                                            <!-- Title -->
                                            <ColumnDefinition Width="*" />
                                            <!-- Windows Button -->
                                            <ColumnDefinition Width="Auto" />

                                        </Grid.ColumnDefinitions>

                                        <!-- Title -->
                                        <TextBlock Grid.Column="0" Text="Ajouter un Équipement" Margin="20 20 0 0" Style="{DynamicResource TitleTextBlockStyle}"/>
                                        <!-- Window Buttons -->


                                        <Button Grid.Column="2" Click="Button_Click" Margin="25 0" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}"  Tag="IsCloseButton"/>

                                    </Grid>
                                    <!-- Page Content -->
                                    <Border Grid.Row="1" Padding="0" ClipToBounds="True" >
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ErrorTemplate">
            <StackPanel Orientation="Horizontal">
                <!-- Icon -->
                <Path x:Name="errorIcon" Data="{StaticResource error}" Height="11" Width="11" Stretch="Fill" Fill="{DynamicResource SecundaryRedColor}"/>

                <!-- Error TextBlock -->
                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="{DynamicResource SecundaryRedColor}"/>
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
       
        <Image Visibility="{Binding DimmableOverlayVisible,Converter={local:BooleanToVisiblityConverter},ConverterParameter=True}" Width="100" Height="100" Panel.ZIndex="10" Source="/Styles/Icons/setting-240.png" >
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <RotateTransform></RotateTransform>
                        </Setter.Value>
                    </Setter>
                    <Style.Resources>
                        <Storyboard x:Key="Spin">
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                        From="0"
                                        To="360"
                                        Duration="0:0:2"
                                        RepeatBehavior="Forever" />
                        </Storyboard>
                    </Style.Resources>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
               
            </Image.Style>
        </Image>

        <Image HorizontalAlignment="Left" 
                   VerticalAlignment="Bottom"
                   Opacity="0.1" ClipToBounds="True"
                   Source="/Styles/Icons/setting-240.png" 
                   Height="355" Grid.RowSpan="2" Width="430" Margin="-170,0,0,-180"/>

        <Grid Grid.Row="0" Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Dimmed overlay -->
            <Border Grid.RowSpan="2" 
                   Panel.ZIndex="10"
                   Opacity="0.3">

                <Border CornerRadius="7"  Background="{StaticResource PrimaryBlackColor}"
             local:AnimateFadeInProperty.Value="{Binding DimmableOverlayVisible,UpdateSourceTrigger=PropertyChanged,FallbackValue=true}"/>

            </Border>
            <Border Grid.ColumnSpan="2" Grid.RowSpan="4"  Height="auto" CornerRadius="7" Background="{DynamicResource TertiaryBackgroundColor}" BorderThickness="2" BorderBrush="{DynamicResource LineColor}"/>

            <StackPanel Orientation="Vertical">
                <TextBlock Text="Nom du nouvel équipement" Style="{DynamicResource LabelTextBlockStyle}" />
                <TextBox x:Name="txtEquipmentName" Margin="24 0 0 0" Style="{DynamicResource InputTextBoxStyle}" 
                         Text="{Binding EquipmentName, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,ValidatesOnDataErrors=True,NotifyOnValidationError=True}"/>
                <StackPanel Orientation="Horizontal" Margin="30 0 0 6" Height="22">
                    <!--<Path x:Name="errorIcon" Data="{StaticResource error}" Height="11" Width="11" Stretch="Fill" Fill="{DynamicResource SecundaryRedColor}"/>-->
                    <TextBlock Margin="2 0 0 0" FontSize="10" Style="{StaticResource ErrorLabelTextBlockStyle}" 
                            Foreground="{DynamicResource SecundaryRedColor}" >
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}" >
                                <Binding ElementName="txtEquipmentName"  Path="(Validation.Errors).CurrentItem.ErrorContent"/>
                            </MultiBinding>
                        </TextBlock.Text>
                        
                    </TextBlock>
                </StackPanel>
                
               
            </StackPanel>
            <!--  Description-->
            <StackPanel Grid.Row="1" Orientation="Vertical">
                <TextBlock Text="Description" Style="{DynamicResource LabelTextBlockStyle}" />
                <TextBox x:Name="txtDescName" Width="720" Margin="24 0 0 0" Style="{DynamicResource InputTextBoxStyle}" 
             Text="{Binding Description, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,ValidatesOnDataErrors=True,NotifyOnValidationError=True}"/>
                <StackPanel Orientation="Horizontal" Margin="30 0 0 6" Height="22">
                    <!--<Path x:Name="errorIcon" Data="{StaticResource error}" Height="11" Width="11" Stretch="Fill" Fill="{DynamicResource SecundaryRedColor}"/>-->
                    <TextBlock Margin="2 0 0 0" FontSize="10" Style="{StaticResource ErrorLabelTextBlockStyle}" 
                Foreground="{DynamicResource SecundaryRedColor}" >
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}" >
                                <Binding ElementName="txtDescName"  Path="(Validation.Errors).CurrentItem.ErrorContent"/>
                            </MultiBinding>
                        </TextBlock.Text>

                    </TextBlock>
                </StackPanel>


            </StackPanel>
        </Grid>
        <Button IsEnabled="{Binding IsBtnEnabled}" Command="{Binding AddCommand}" CommandParameter="{Binding ElementName=Wind}" Grid.Row="1" Style="{StaticResource PrimeButton}" Margin="0 0 20 10" Width="95" Tag="{StaticResource plus}" HorizontalAlignment="Right" Content="Ajouter"/>
    </Grid>
</Window>
